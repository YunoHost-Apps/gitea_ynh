#!/bin/bash

#=================================================
# GENERIC START
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# LOAD SETTINGS
#=================================================
ynh_script_progression --message="Loading installation settings..."

app=$YNH_APP_INSTANCE_NAME

domain=$(ynh_app_setting_get --app=$app --key=domain)
path_url=$(ynh_app_setting_get --app=$app --key=path)
admin=$(ynh_app_setting_get --app=$app --key=admin)
final_path=$(ynh_app_setting_get --app=$app --key=final_path)
db_name=$(ynh_app_setting_get --app=$app --key=db_name)
db_user=$db_name
db_pwd=$(ynh_app_setting_get --app=$app --key=mysqlpwd)
port=$(ynh_app_setting_get --app=$app --key=port)
secret_key=$(ynh_app_setting_get --app=$app --key=secret_key)

upstream_version=$(ynh_app_setting_get --app $app --key upstream_version)

#=================================================
# CHECK VERSION
#=================================================
ynh_script_progression --message="Checking version..."

upgrade_type=$(ynh_check_app_version_changed)

#=================================================
# BACKUP BEFORE UPGRADE THEN ACTIVE TRAP
#=================================================
ynh_script_progression --message="Backing up the app before upgrading (may take a while)..."

# Backup the current version of the app
ynh_backup_before_upgrade
ynh_clean_setup () {
	ynh_clean_check_starting
	# Restore it if the upgrade fails
	ynh_restore_upgradebackup
}
# Exit if an error occurs during the execution of the script
ynh_abort_if_errors

#=================================================
# STANDARD UPGRADE STEPS
#=================================================
# STOP SYSTEMD SERVICE
#=================================================
ynh_script_progression --message="Stopping a systemd service..."

ynh_systemd_action --service_name=$app --action="stop"

#=================================================
# MIGRATION FROM GOGS
#=================================================

[[ $YNH_APP_ID == "gogs" ]] \
    && [[ "$(cat "/opt/$app/templates/.VERSION")" != 0.11.79.1211 ]] \
    && ynh_die --message "It look like that you have an old gogs install. You need first upgrade gogs instance (id : $gogs_migrate_id) and after migrate to gitea."
ynh_handle_app_migration --migration_id=gogs --migration_list=gogs_migrations

if [[ $migration_process -eq 1 ]]; then
    # Reload variables
    dbname=$app
    db_user=$app
    final_path="/opt/$app"
    datadir="/home/""$app"
    repos_path="$datadir/repositories"
    data_path="$datadir/data"

    # Replace the user
    ynh_system_user_delete $old_app
    test getent passwd "$app" &>/dev/null || \
        useradd -d "$datadir" --system --user-group "$app" --shell /bin/bash || \
            ynh_die --message "Unable to create $app system account"

    # Clean old binary
    ynh_secure_remove --file=$final_path/gogs
    ynh_secure_remove --file=$final_path/custom/conf/auth.d

    # Restore authentication from SQL database
    ynh_replace_string --match_string __APP__ --replace_string "$app" --target_file ../conf/login_source.sql
    ynh_mysql_connect_as "$db_user" "$db_password" "$dbname" < ../conf/login_source.sql

    # Fix hooks
    if [[ -e $datadir/repositories ]];then
        ls $datadir/repositories/*/*.git/hooks/pre-receive | while read p; do
            ynh_secure_remove --file=$p
        done
        ls $datadir/repositories/*/*.git/hooks/post-receive | while read p; do
            ynh_secure_remove --file=$p
        done
    fi

    upstream_version="0.0.1"
fi

# Move data directory
if [ -e "/home/$app" ] && [ ! -e $datadir ]; then
    mv "/home/$app" "$datadir"
fi


# Set all permissions
ynh_script_progression --message="Update permission..."
if ! ynh_permission_exists --permission admin; then
    ynh_app_setting_delete --app $app --key unprotected_uris
    ynh_permission_create --permission 'admin' --allowed "$admin"
    # Update ldap config
    ynh_replace_string --match_string "__APP__" --replace_string "$app" --target_file ../conf/login_source.sql
    ynh_mysql_connect_as "$db_user" "$db_password" "$dbname" < ../conf/login_source.sql
fi

#=================================================
# CREATE DEDICATED USER
#=================================================
ynh_script_progression --message="Making sure dedicated system user exists..."

# Create a dedicated user (if not existing)
ynh_system_user_create --username=$app --home_dir="$final_path" --home_dir=$datadir --use_shell

# Add ssh permission for gitea user
adduser $app ssh.app

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================

if [ "$upgrade_type" == "UPGRADE_APP" ]
then
	ynh_script_progression --message="Upgrading source files..."

	# Download, check integrity, uncompress and patch the source from app.src
	ynh_setup_source --dest_dir="$final_path" --source_id="$YNH_ARCH" --keep="custom/conf/app.ini"
fi

# create needed directories
mkdir -p "$final_path/data"
mkdir -p "$final_path/custom/conf"

chmod 750 "$final_path"
chmod -R o-rwx "$final_path"
chmod u=rwX,g=rX,o= "$final_path"
chmod u=rwx,g=rx,o= "$final_path/gitea"
chmod u=rwx,g=rx,o= "$final_path/custom/conf/app.ini"
chown -R $app:$app "$final_path"

mkdir -p "/var/log/$app"
chown -R $app:$app "/var/log/$app"
chmod u=rwX,g=rX,o= "/var/log/$app"

# Save Version
ynh_app_setting_set --app=$app --key=upstream_version --value=$upstream_version

#=================================================
# NGINX CONFIGURATION
#=================================================
ynh_script_progression --message="Upgrading NGINX web server configuration..."

# Create a dedicated NGINX config
ynh_add_nginx_config

#=================================================
# SPECIFIC UPGRADE
#=================================================
# UPDATE A CONFIG FILE
#=================================================
ynh_script_progression --message="Updating a configuration file..."

# Clean template to fix issue : https://github.com/gogits/gogs/issues/4585
ynh_secure_remove --file="$final_path/templates"

# Configure gitea with app.ini file
ssh_port=$(grep -P "Port\s+\d+" /etc/ssh/sshd_config | grep -P -o "\d+")
ynh_add_config --template="app.ini" --destination="$final_path/custom/conf/app.ini"

#=================================================
# SETUP SYSTEMD
#=================================================
ynh_script_progression --message="Upgrading systemd configuration..."

# Create a dedicated systemd config
ynh_add_systemd_config

#=================================================
# GENERIC FINALIZATION
#=================================================
# SETUP LOGROTATE
#=================================================
ynh_script_progression --message="Upgrading logrotate configuration..."

# Use logrotate to manage app-specific logfile(s)
ynh_use_logrotate --non-append

#=================================================
# INTEGRATE SERVICE IN YUNOHOST
#=================================================
ynh_script_progression --message="Integrating service in YunoHost..."

yunohost service add $app --log="/var/log/$app/gitea.log"

#=================================================
# START SYSTEMD SERVICE
#=================================================
ynh_script_progression --message="Starting a systemd service..."

# Start a systemd service
ynh_systemd_action --service_name=$app --action="start" --log_path="/var/log/$app/gitea.log" --line_match="Starting new Web server: tcp:127.0.0.1:" --timeout=10
sleep 1

#=================================================
# UPGRADE FAIL2BAN
#=================================================
ynh_script_progression --message="Reconfiguring Fail2Ban..."

# Create a dedicated Fail2Ban config
ynh_add_fail2ban_config --logpath="/var/log/$app/gitea.log" --failregex=".*Failed authentication attempt for .* from <HOST>" --max_retry=5

#=================================================
# RELOAD NGINX
#=================================================
ynh_script_progression --message="Reloading NGINX web server..."

ynh_systemd_action --service_name=nginx --action=reload

#=================================================
# FINISH MIGRATION PROCESS
#=================================================

if [[ $migration_process -eq 1 ]]; then
    ynh_script_progression --message="gogs has been successfully migrated to Gitea! \
A last scheduled operation will run in a couple of minutes to finish the \
migration in YunoHost side. Do not proceed any application operation while \
you don't see Gogs as installed." >&2

    # Execute a post migration script after the end of this upgrade.
    # Mainly for some cleaning
    script_post_migration=gogs_post_migration.sh
    ynh_replace_string --match_string __OLD_APP__ --replace_string "$old_app" --target_file ../conf/$script_post_migration
    ynh_replace_string --match_string __NEW_APP__ --replace_string "$app" --target_file ../conf/$script_post_migration
    cp ../conf/$script_post_migration /tmp
    chmod +x /tmp/$script_post_migration
    (cd /tmp; echo "/tmp/$script_post_migration > /tmp/$script_post_migration.log 2>&1" | at now + 2 minutes)
fi

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression --message="Upgrade of $app completed"
